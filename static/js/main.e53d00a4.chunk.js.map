{"version":3,"sources":["components/Sections.js","components/component.styled.js","components/Layout.js","components/FeedbackOptions.js","components/Statistics.js","components/Notification.js","components/App.js","index.js"],"names":["Section","children","title","className","Container","styled","div","Button","button","Layout","FeedbackOptions","onLeaveFeedback","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","counterFeedback","stateName","setState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","trunc","this","Component","ReactDOM","render","document","getElementById"],"mappings":"kQAceA,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACd,6BAASC,UAAU,YACjB,4BAAKD,GACJD,I,qhBCJL,IAAMG,EAAYC,IAAOC,IAAV,KAMTC,EAASF,IAAOG,OAAV,KCFGC,EAFA,SAAC,GAAD,IAAGR,EAAH,EAAGA,SAAH,OAAkB,kBAACG,EAAD,KAAYH,ICA9B,SAASS,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,oCACE,kBAACJ,EAAD,CAAQK,KAAK,SAASC,QAAS,kBAAMF,EAAgB,UAArD,QAGA,kBAACJ,EAAD,CAAQK,KAAK,SAASC,QAAS,kBAAMF,EAAgB,aAArD,WAGA,kBAACJ,EAAD,CAAQK,KAAK,SAASC,QAAS,kBAAMF,EAAgB,SAArD,QCVS,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,oCACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,OCbN,IAEeC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,ICIrBC,E,4MACnBC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPO,gBAAkB,SAACC,GACjB,EAAKC,UAAS,SAACH,GACb,OAAO,eACJE,EAAaF,EAAME,IAAc,O,EAKxCE,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKC,GAE5C,OADAD,GAAOC,IAEN,I,EAELC,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKZ,MAAMR,KAAc,EAAKY,uB,uDAEzC,IAAD,EACwBS,KAAKb,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQkB,KAAKT,qBACbR,EAAqBiB,KAAKH,kCAChC,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAS/B,MAAM,yBACb,kBAACQ,EAAD,CAAiBC,gBAAiByB,KAAKZ,mBAGzC,kBAAC,EAAD,CAAStB,MAAM,cACF,IAAVgB,EACC,kBAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAcE,QAAQ,4B,GA3CDgB,aCHjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e53d00a4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ children, title }) => (\r\n  <section className=\"sections\">\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  text-align: left;\r\n  max-width: 1170px;\r\n  padding: 20px;\r\n  font-size:22px;\r\n`;\r\nconst Button = styled.button`\r\n  margin-right: 30px;\r\n  background-color: white;\r\n  padding: 5px;\r\n  width:120px;\r\n  color: blueviolet;\r\n  font-size:22px;\r\n  border: 1px solid rgb(197, 150, 241);\r\n  border-radius: 10px;\r\n  outline: none;\r\n  &:hover,\r\n  &:active{\r\n    box-shadow: 2px 2px 1px 0px rgba(197, 150, 241, 0.8);\r\n  }\r\n`;\r\n\r\nexport { Container, Button };\r\n","import React from \"react\";\r\nimport { Container } from \"./component.styled\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Layout = ({ children }) => <Container>{children}</Container>;\r\n\r\nexport default Layout;\r\n\r\n\r\nLayout.propTypes={\r\n    children: PropTypes.node, \r\n}","import React from \"react\";\r\nimport { Button } from \"./component.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function FeedbackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      <Button type=\"button\" onClick={() => onLeaveFeedback(\"good\")}>\r\n        Good\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => onLeaveFeedback(\"neutral\")}>\r\n        Neutral\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => onLeaveFeedback(\"bad\")}>\r\n        Bad\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}% </p>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport Section from \"./Sections\";\nimport Layout from \"./Layout\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"./Statistics\";\nimport Notification from \"./Notification\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  counterFeedback = (stateName) => {\n    this.setState((state) => {\n      return {\n        [stateName]: (state[stateName] += 1),\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => {\n      acc += value;\n      return acc;\n    }, 0);\n  };\n  countPositiveFeedbackPercentage = () => {\n    return Math.trunc((this.state.good * 100) / this.countTotalFeedback());\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <Layout>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.counterFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total !== 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}